// Generated by cpp11: do not edit by hand
// clang-format off


#include "cpp11/declarations.hpp"
#include <R_ext/Visibility.h>

// Unigd.cpp
bool unigd_ugd_(std::string bg, double width, double height, double pointsize, cpp11::list aliases, bool reset_par);
extern "C" SEXP _unigd_unigd_ugd_(SEXP bg, SEXP width, SEXP height, SEXP pointsize, SEXP aliases, SEXP reset_par) {
  BEGIN_CPP11
    return cpp11::as_sexp(unigd_ugd_(cpp11::as_cpp<cpp11::decay_t<std::string>>(bg), cpp11::as_cpp<cpp11::decay_t<double>>(width), cpp11::as_cpp<cpp11::decay_t<double>>(height), cpp11::as_cpp<cpp11::decay_t<double>>(pointsize), cpp11::as_cpp<cpp11::decay_t<cpp11::list>>(aliases), cpp11::as_cpp<cpp11::decay_t<bool>>(reset_par)));
  END_CPP11
}
// Unigd.cpp
cpp11::list unigd_state_(int devnum);
extern "C" SEXP _unigd_unigd_state_(SEXP devnum) {
  BEGIN_CPP11
    return cpp11::as_sexp(unigd_state_(cpp11::as_cpp<cpp11::decay_t<int>>(devnum)));
  END_CPP11
}
// Unigd.cpp
cpp11::list unigd_info_(int devnum);
extern "C" SEXP _unigd_unigd_info_(SEXP devnum) {
  BEGIN_CPP11
    return cpp11::as_sexp(unigd_info_(cpp11::as_cpp<cpp11::decay_t<int>>(devnum)));
  END_CPP11
}
// Unigd.cpp
cpp11::data_frame unigd_renderers_();
extern "C" SEXP _unigd_unigd_renderers_() {
  BEGIN_CPP11
    return cpp11::as_sexp(unigd_renderers_());
  END_CPP11
}
// Unigd.cpp
bool unigd_renderer_is_str_(std::string renderer_id);
extern "C" SEXP _unigd_unigd_renderer_is_str_(SEXP renderer_id) {
  BEGIN_CPP11
    return cpp11::as_sexp(unigd_renderer_is_str_(cpp11::as_cpp<cpp11::decay_t<std::string>>(renderer_id)));
  END_CPP11
}
// Unigd.cpp
bool unigd_renderer_is_raw_(std::string renderer_id);
extern "C" SEXP _unigd_unigd_renderer_is_raw_(SEXP renderer_id) {
  BEGIN_CPP11
    return cpp11::as_sexp(unigd_renderer_is_raw_(cpp11::as_cpp<cpp11::decay_t<std::string>>(renderer_id)));
  END_CPP11
}
// Unigd.cpp
int unigd_plot_find_(int devnum, std::string plot_id);
extern "C" SEXP _unigd_unigd_plot_find_(SEXP devnum, SEXP plot_id) {
  BEGIN_CPP11
    return cpp11::as_sexp(unigd_plot_find_(cpp11::as_cpp<cpp11::decay_t<int>>(devnum), cpp11::as_cpp<cpp11::decay_t<std::string>>(plot_id)));
  END_CPP11
}
// Unigd.cpp
std::string unigd_plot_str_(int devnum, int page, double width, double height, double zoom, std::string renderer_id);
extern "C" SEXP _unigd_unigd_plot_str_(SEXP devnum, SEXP page, SEXP width, SEXP height, SEXP zoom, SEXP renderer_id) {
  BEGIN_CPP11
    return cpp11::as_sexp(unigd_plot_str_(cpp11::as_cpp<cpp11::decay_t<int>>(devnum), cpp11::as_cpp<cpp11::decay_t<int>>(page), cpp11::as_cpp<cpp11::decay_t<double>>(width), cpp11::as_cpp<cpp11::decay_t<double>>(height), cpp11::as_cpp<cpp11::decay_t<double>>(zoom), cpp11::as_cpp<cpp11::decay_t<std::string>>(renderer_id)));
  END_CPP11
}
// Unigd.cpp
cpp11::raws unigd_plot_raw_(int devnum, int page, double width, double height, double zoom, std::string renderer_id);
extern "C" SEXP _unigd_unigd_plot_raw_(SEXP devnum, SEXP page, SEXP width, SEXP height, SEXP zoom, SEXP renderer_id) {
  BEGIN_CPP11
    return cpp11::as_sexp(unigd_plot_raw_(cpp11::as_cpp<cpp11::decay_t<int>>(devnum), cpp11::as_cpp<cpp11::decay_t<int>>(page), cpp11::as_cpp<cpp11::decay_t<double>>(width), cpp11::as_cpp<cpp11::decay_t<double>>(height), cpp11::as_cpp<cpp11::decay_t<double>>(zoom), cpp11::as_cpp<cpp11::decay_t<std::string>>(renderer_id)));
  END_CPP11
}
// Unigd.cpp
bool unigd_remove_(int devnum, int page);
extern "C" SEXP _unigd_unigd_remove_(SEXP devnum, SEXP page) {
  BEGIN_CPP11
    return cpp11::as_sexp(unigd_remove_(cpp11::as_cpp<cpp11::decay_t<int>>(devnum), cpp11::as_cpp<cpp11::decay_t<int>>(page)));
  END_CPP11
}
// Unigd.cpp
bool unigd_remove_id_(int devnum, std::string id);
extern "C" SEXP _unigd_unigd_remove_id_(SEXP devnum, SEXP id) {
  BEGIN_CPP11
    return cpp11::as_sexp(unigd_remove_id_(cpp11::as_cpp<cpp11::decay_t<int>>(devnum), cpp11::as_cpp<cpp11::decay_t<std::string>>(id)));
  END_CPP11
}
// Unigd.cpp
cpp11::writable::list unigd_id_(int devnum, int page, int limit);
extern "C" SEXP _unigd_unigd_id_(SEXP devnum, SEXP page, SEXP limit) {
  BEGIN_CPP11
    return cpp11::as_sexp(unigd_id_(cpp11::as_cpp<cpp11::decay_t<int>>(devnum), cpp11::as_cpp<cpp11::decay_t<int>>(page), cpp11::as_cpp<cpp11::decay_t<int>>(limit)));
  END_CPP11
}
// Unigd.cpp
bool unigd_clear_(int devnum);
extern "C" SEXP _unigd_unigd_clear_(SEXP devnum) {
  BEGIN_CPP11
    return cpp11::as_sexp(unigd_clear_(cpp11::as_cpp<cpp11::decay_t<int>>(devnum)));
  END_CPP11
}
// Unigd.cpp
void unigd_ipc_open_();
extern "C" SEXP _unigd_unigd_ipc_open_() {
  BEGIN_CPP11
    unigd_ipc_open_();
    return R_NilValue;
  END_CPP11
}
// Unigd.cpp
void unigd_ipc_close_();
extern "C" SEXP _unigd_unigd_ipc_close_() {
  BEGIN_CPP11
    unigd_ipc_close_();
    return R_NilValue;
  END_CPP11
}

extern "C" {
static const R_CallMethodDef CallEntries[] = {
    {"_unigd_unigd_clear_",           (DL_FUNC) &_unigd_unigd_clear_,           1},
    {"_unigd_unigd_id_",              (DL_FUNC) &_unigd_unigd_id_,              3},
    {"_unigd_unigd_info_",            (DL_FUNC) &_unigd_unigd_info_,            1},
    {"_unigd_unigd_ipc_close_",       (DL_FUNC) &_unigd_unigd_ipc_close_,       0},
    {"_unigd_unigd_ipc_open_",        (DL_FUNC) &_unigd_unigd_ipc_open_,        0},
    {"_unigd_unigd_plot_find_",       (DL_FUNC) &_unigd_unigd_plot_find_,       2},
    {"_unigd_unigd_plot_raw_",        (DL_FUNC) &_unigd_unigd_plot_raw_,        6},
    {"_unigd_unigd_plot_str_",        (DL_FUNC) &_unigd_unigd_plot_str_,        6},
    {"_unigd_unigd_remove_",          (DL_FUNC) &_unigd_unigd_remove_,          2},
    {"_unigd_unigd_remove_id_",       (DL_FUNC) &_unigd_unigd_remove_id_,       2},
    {"_unigd_unigd_renderer_is_raw_", (DL_FUNC) &_unigd_unigd_renderer_is_raw_, 1},
    {"_unigd_unigd_renderer_is_str_", (DL_FUNC) &_unigd_unigd_renderer_is_str_, 1},
    {"_unigd_unigd_renderers_",       (DL_FUNC) &_unigd_unigd_renderers_,       0},
    {"_unigd_unigd_state_",           (DL_FUNC) &_unigd_unigd_state_,           1},
    {"_unigd_unigd_ugd_",             (DL_FUNC) &_unigd_unigd_ugd_,             6},
    {NULL, NULL, 0}
};
}

extern "C" attribute_visible void R_init_unigd(DllInfo* dll){
  R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
  R_useDynamicSymbols(dll, FALSE);
  R_forceSymbols(dll, TRUE);
}
